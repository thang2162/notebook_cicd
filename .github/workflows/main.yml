# GitHub Actions docs
# https://help.github.com/en/articles/about-github-actions
# https://help.github.com/en/articles/workflow-syntax-for-github-actions
name: CI

on: [push]

jobs:

  build:
    name: Build
    # Machine environment:
    # https://help.github.com/en/articles/software-in-virtual-environments-for-github-actions#ubuntu-1804-lts
    # We specify the Node.js version manually below, and use versioned Chrome from Puppeteer.
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js 12.11
      uses: actions/setup-node@v1
      with:
        node-version: 12.8
    - name: Install dependencies
      run: npm install
    - name: Lint
      run: npm run lint
    - name: Build
      run: npm run build -- --prod
    - name: Test
      run: npm test -- --configuration=ci
    - name: E2E
      run: npm run e2e -- --configuration=ci
    - name: executing remote ssh commands using key 
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        port: ${{ secrets.PORT }}
        script: |
          whoami
#          ls -al
     - name: copy file via ssh password
       uses: appleboy/scp-action@master
       with:
         host: ${{ secrets.HOST }}
         username: ${{ secrets.USERNAME }}
         key: ${{ secrets.KEY }}
         source: "/home/runner/work/notebook_cicd/notebook_cicd"
         target: ${{ secrets.TARGET }}  

#  prepare:
#    name: Prepare
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#    - name: executing remote ssh commands using password
#      uses: appleboy/ssh-action@master
#      with:
#        host: ${{ secrets.HOST }}
#        username: ${{ secrets.USERNAME }}
#        port: ${{ secrets.PORT }}
#        script: |
#          whoami
#          ls -al
          
#  deploy:
#    name: Deploy
#    runs-on: ubuntu-latest
#    needs: [build, prepare]
#    steps:
#    - uses: actions/checkout@master
#    - name: copy file via ssh password
#      uses: appleboy/scp-action@master
#      with:
#        host: ${{ secrets.HOST }}
#        username: ${{ secrets.USERNAME }}
#        port: ${{ secrets.PORT }}
#        source: "tests/a.txt,tests/b.txt"
#        target: "test"            
